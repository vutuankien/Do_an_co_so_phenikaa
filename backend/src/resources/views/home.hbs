<div class="container mt-4">
  <div class="row">
    <!-- Tổng doanh thu -->
    <div class="col-md-4">
      <div class="card text-white bg-primary mb-3 shadow-lg">
        <div class="card-body d-flex align-items-center">
          <i class="bi bi-cash-stack fs-1 me-3"></i>
          <div>
            <h5 class="card-title">Tổng Doanh Thu</h5>
            <p class="card-text fs-4 fw-bold">$ {{ revenueTotal }}</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Số đơn hàng -->
    <div class="col-md-4">
      <div class="card text-white bg-success mb-3 shadow-lg">
        <div class="card-body d-flex align-items-center">
          <i class="bi bi-receipt fs-1 me-3"></i>
          <div>
            <h5 class="card-title">Số Đơn Hàng</h5>
            <p class="card-text fs-4 fw-bold">{{ billCount }}</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Số bài viết đã đăng -->
    <div class="col-md-4">
      <div class="card text-white bg-info mb-3 shadow-lg">
        <div class="card-body d-flex align-items-center">
          <i class="bi bi-file-post fs-1 me-3"></i>
          <div>
            <h5 class="card-title">Số bài viết đã đăng</h5>
            <p class="card-text fs-4 fw-bold">{{ blogCount }}</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <!-- Số nhân viên -->
    <div class="col-md-6">
      <div class="card text-white bg-secondary mb-3 shadow-lg">
        <div class="card-body d-flex align-items-center">
          <i class="bi bi-people-fill fs-1 me-3"></i>
          <div>
            <h5 class="card-title">Số nhân viên của cửa hàng</h5>
            <p class="card-text fs-4 fw-bold">{{ employeeCount }}</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Danh mục sản phẩm -->
    <div class="col-md-6">
      <div class="card text-white bg-warning mb-3 shadow-lg">
        <div class="card-body d-flex align-items-center">
          <i class="bi bi-box-seam fs-1 me-3"></i>
          <div>
            <h5 class="card-title">Danh mục sản phẩm</h5>
            <p class="card-text fs-4 fw-bold">{{ cosmeticCount }}</p>
          </div>
        </div>
      </div>
    </div>
  </div>


  <div class="container mt-4">
    <div class=" d-flex justify-content-between gap-2">
      <div class="card shadow-lg mb-4 col-md-6">
        <div class="card-body">
          <h5 class="card-title">Tổng Doanh Thu Theo Tháng</h5>
          <canvas id="revenueBarChart"></canvas>
        </div>
      </div>


      <div class="card shadow-lg mb-4 col-md-6">
        <div class="card-body">
          <h5 class="card-title">Số Lượng Đơn Hàng Theo Tháng</h5>
          <canvas id="billCountChart"></canvas>
        </div>
      </div>
    </div>

    <div class="d-flex justify-content-between gap-2">
      <div class="card shadow-lg mb-4 col-md-6">
        <div class="card-body">
          <h5 class="card-title">Số Bài Viết Theo Tháng</h5>
          <canvas id="blogPostChart"></canvas>
        </div>
      </div>

      <!-- Biểu đồ danh mục sản phẩm -->
      <div class="card shadow-lg mb-4 col-md-6">
        <div class="card-body">
          <h5 class="card-title">Phân Loại Sản Phẩm Theo Danh Mục</h5>
          <canvas id="productCategoryChart"></canvas>
        </div>
      </div>
    </div>
  </div>

</div>

<!-- Import Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

<!-- Import Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    try {
      // Parse dữ liệu JSON từ server
      const revenueData = JSON.parse('{{{ revenueData }}}');
      const billCountData = JSON.parse('{{{ billCountData }}}');
      const blogPostData = JSON.parse('{{{ blogPostData }}}');
      const productCategoryData = JSON.parse('{{{ productCategoryData }}}');

      console.log("Dữ liệu revenueData nhận được:", revenueData);




      const ctxRevenue = document.getElementById("revenueBarChart").getContext("2d");

      // Kiểm tra nếu biểu đồ đã tồn tại thì hủy trước khi tạo mới
      if (window.revenueChart) {
        window.revenueChart.destroy();
      }

      // Kiểm tra nếu có dữ liệu để hiển thị
      if (revenueData.labels.length === 0) {
        console.warn("Không có dữ liệu doanh thu để hiển thị!");
        return;
      }

      // Tạo biểu đồ cột
      window.revenueChart = new Chart(ctxRevenue, {
        type: "bar",
        data: {
          labels: revenueData.labels, // Các tháng
          datasets: [{
            label: "Tổng Doanh Thu ($)",
            data: revenueData.values, // Doanh thu theo tháng
            backgroundColor: "rgba(75, 192, 192, 0.6)",
            borderColor: "rgba(75, 192, 192, 1)",
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { display: true }
          },
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });


      // Biểu đồ đơn hàng
      const ctxBillCountChart = document.getElementById("billCountChart").getContext("2d");


      if (window.billChart) {
        window.billChart.destroy();
      }

      // Kiểm tra nếu có dữ liệu để hiển thị
      if (billCountData.labels.length === 0) {
        console.warn("Không có dữ liệu đơn hàng để hiển thị!");
        return;
      }

      // Tạo biểu đồ cột
      window.billChart = new Chart(ctxBillCountChart, {
        type: "bar",
        data: {
          labels: billCountData.labels, // Các tháng
          datasets: [{
            label: "Tổng số đơn hàng",
            data: billCountData.values,
            backgroundColor: "rgba(255, 159, 64, 0.6)",
            borderColor: "rgba(75, 192, 192, 1)",
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { display: true }
          },
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });


      const ctxBlogPost = document.getElementById("blogPostChart").getContext("2d");

      // Kiểm tra nếu biểu đồ đã tồn tại thì hủy trước khi tạo mới
      if (window.blogChart) {
        window.blogChart.destroy();
      }

      // Kiểm tra nếu có dữ liệu để hiển thị
      if (blogPostData.labels.length === 0) {
        console.warn("Không có dữ liệu doanh thu để hiển thị!");
        return;
      }

      // Tạo biểu đồ cột
      window.blogChart = new Chart(ctxBlogPost, {
        type: "line",
        data: {
          labels: blogPostData.labels, // Các tháng
          datasets: [{
            label: "Tần suất đăng bài ($)",
            data: blogPostData.values, // Doanh thu theo tháng
            backgroundColor: "rgba(255, 206, 86, 0.6)",
            borderColor: "rgba(75, 192, 192, 1)",
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { display: true }
          },
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });

      //
      const ctxCategory = document.getElementById("productCategoryChart").getContext("2d");

      // Kiểm tra nếu biểu đồ đã tồn tại thì hủy trước khi tạo mới
      if (window.categoryChart) {
        window.categoryChart.destroy();
      }

      // Kiểm tra nếu có dữ liệu để hiển thị
      if (productCategoryData.labels.length === 0) {
        console.warn("Không có dữ liệu doanh thu để hiển thị!");
        return;
      }

      // Tạo biểu đồ cột
      window.categoryChart = new Chart(ctxCategory, {
        type: "pie",
        data: {
          labels: productCategoryData.labels, // Tên danh mục
          datasets: [{
            label: "Số lượng sản phẩm",
            data: productCategoryData.values, // Số lượng theo danh mục
            backgroundColor: [
              "rgba(255, 99, 132, 0.6)",   // Đỏ
              "rgba(54, 162, 235, 0.6)",   // Xanh dương
              "rgba(255, 206, 86, 0.6)",   // Vàng
              "rgba(75, 192, 192, 0.6)",   // Xanh lá
              "rgba(153, 102, 255, 0.6)",  // Tím
              "rgba(255, 159, 64, 0.6)"    // Cam
            ],
            borderColor: [
              "rgba(255, 99, 132, 1)",
              "rgba(54, 162, 235, 1)",
              "rgba(255, 206, 86, 1)",
              "rgba(75, 192, 192, 1)",
              "rgba(153, 102, 255, 1)",
              "rgba(255, 159, 64, 1)"
            ],
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { display: true }
          }
        }
      });


    } catch (error) {
      console.error("Lỗi khi xử lý dữ liệu biểu đồ:", error);
    }
  });
</script>